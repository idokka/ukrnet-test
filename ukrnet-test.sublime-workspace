{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"set_",
				"set_write_to_console"
			],
			[
				"_wr",
				"_write_to_file"
			],
			[
				"wri",
				"_write_to_file"
			],
			[
				"_",
				"_write_to_console"
			],
			[
				"_l",
				"_write_to_console"
			],
			[
				"inc",
				"include"
			],
			[
				"_lo",
				"_log_file"
			],
			[
				"log",
				"log_path"
			],
			[
				"in",
				"include"
			],
			[
				"defa",
				"default_log_path"
			],
			[
				"port",
				"portArg"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 1152,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/server/server.hpp",
			"settings":
			{
				"buffer_size": 1253,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Tupfile",
			"settings":
			{
				"buffer_size": 54,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* A simple server in the internet domain using TCP\n   The port number is passed as an argument */\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n#include <sys/types.h> \n#include <sys/socket.h>\n#include <netinet/in.h>\n\nvoid error(const char *msg)\n{\n    perror(msg);\n    exit(1);\n}\n\nint main(int argc, char *argv[])\n{\n     int sockfd, newsockfd, portno;\n     socklen_t clilen;\n     char buffer[256];\n     struct sockaddr_in serv_addr, cli_addr;\n     int n;\n     if (argc < 2) {\n         fprintf(stderr,\"ERROR, no port provided\\n\");\n         exit(1);\n     }\n     sockfd = socket(AF_INET, SOCK_STREAM, 0);\n     if (sockfd < 0) \n        error(\"ERROR opening socket\");\n     bzero((char *) &serv_addr, sizeof(serv_addr));\n     portno = atoi(argv[1]);\n     serv_addr.sin_family = AF_INET;\n     serv_addr.sin_addr.s_addr = INADDR_ANY;\n     serv_addr.sin_port = htons(portno);\n     if (bind(sockfd, (struct sockaddr *) &serv_addr,\n              sizeof(serv_addr)) < 0) \n              error(\"ERROR on binding\");\n     listen(sockfd,5);\n     clilen = sizeof(cli_addr);\n     newsockfd = accept(sockfd, \n                 (struct sockaddr *) &cli_addr, \n                 &clilen);\n     if (newsockfd < 0) \n          error(\"ERROR on accept\");\n     bzero(buffer,256);\n     n = read(newsockfd,buffer,255);\n     if (n < 0) error(\"ERROR reading from socket\");\n     printf(\"Here is the message: %s\\n\",buffer);\n     n = write(newsockfd,\"I got your message\",18);\n     if (n < 0) error(\"ERROR writing to socket\");\n     close(newsockfd);\n     close(sockfd);\n     return 0; \n}\n",
			"file": "src/server/server.c",
			"file_size": 1583,
			"file_write_time": 131001276959755630,
			"settings":
			{
				"buffer_size": 1583,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 54.0,
		"last_filter": "Preferences: SyntaxFold Settings - User",
		"selected_items":
		[
			[
				"Preferences: SyntaxFold Settings - User",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"Preferences: SyntaxFold Keybindings - Default",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/dokka/src/ukrnet-test/src",
		"/home/dokka/src/ukrnet-test/src/common",
		"/home/dokka/src/ukrnet-test/src/server",
		"/home/dokka/src/ukrnet-test/thirdparty"
	],
	"file_history":
	[
		"/home/dokka/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/dokka/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/dokka/.config/sublime-text-3/Packages/User/RenameFile/rename_file.py",
		"/home/dokka/src/ukrnet-test/src/common/logger.hpp",
		"/home/dokka/.config/sublime-text-3/Packages/User/syntax_fold.sublime-settings",
		"/home/dokka/.config/sublime-text-3/Packages/SyntaxFold/Default (Linux).sublime-keymap",
		"/home/dokka/.config/sublime-text-3/Packages/sublimetext-syntaxfold/syntax_fold.sublime-settings",
		"/home/dokka/.config/sublime-text-3/Packages/sublimetext-syntaxfold/Default (Linux).sublime-keymap",
		"/home/dokka/src/ukrnet-test/src/common/stream-helper.hpp",
		"/home/dokka/src/ukrnet-test/src/readme.md",
		"/home/dokka/src/notify.c",
		"/home/dokka/src/cookie/advbdaq/Makefile",
		"/home/dokka/src/cookie/advbdaq/advbdaq.mk",
		"/home/dokka/src/ukrnet-test/src/server/server.hpp",
		"/home/dokka/src/ukrnet-test/src/main.cpp",
		"/home/dokka/src/ukrnet-test/src/server/server.h",
		"/home/dokka/src/ukrnet-test/src/common/logger.h",
		"/home/dokka/src/Symbol List - Prefix Banner Items.tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/C.tmLanguage",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/C++.tmLanguage",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/C.tmLanguage.header",
		"/home/dokka/src/Symbol List - Indent Class Methods.tmPreferences",
		"/home/dokka/src/Symbol List Hide Forward Decls.tmPreferences",
		"/home/dokka/src/Symbol Index Hide Ctors.tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/Completion Rules.tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/Symbol List - Prefix Banner Items.tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/Comments (C++).tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/C++ - Starting Kit.sublime-build",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/namespace-..-(namespace).sublime-snippet",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/messages.json",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/C++.sublime-settings",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/Symbol Index.tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/Indentation Rules.tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/README.md",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/messages/0.2.6.txt",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/messages/0.2.7.txt",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/messages/0.2.8.txt",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/messages/install.txt",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/Symbol List - Indent Class Methods.tmPreferences",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/class-..-(class).sublime-snippet",
		"/home/dokka/.config/sublime-text-3/Packages/cppStartingKit/C.sublime-settings",
		"/home/dokka/.config/sublime-text-3/Packages/Colorcoder/colorcoder.sublime-settings",
		"/home/dokka/.config/sublime-text-3/Packages/User/colorcoder.sublime-settings",
		"/home/dokka/src/ukrnet-test/thirdparty/tclap/include/tclap/ValueArg.h",
		"/home/dokka/src/ukrnet-test/thirdparty/tclap/examples/test1.cpp",
		"/home/dokka/src/ukrnet-test/thirdparty/tclap/include/tclap/CmdLine.h",
		"/tmp/mozilla_dokka0/server-1.c",
		"/home/dokka/src/ukrnet-test/thirdparty/tclap/include/Makefile.in",
		"/home/dokka/src/ukrnet-test/main.cpp",
		"/home/dokka/src/atto-test/main.cpp"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"class-struct",
			"class-struct-block",
			"block.class-struct",
			"Semicolon",
			"semicolon",
			"semi_colon.eol.ccpp",
			";",
			";\\$",
			";$",
			"semi_colon",
			"Semicolon"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1152,
						"regions":
						{
						},
						"selection":
						[
							[
								817,
								817
							]
						],
						"settings":
						{
							"bs_sintax": "c++",
							"buffer_scroll_name": "1d8af75f",
							"spell_check": false,
							"syntax": "Packages/cppStartingKit/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 255.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/server/server.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1253,
						"regions":
						{
						},
						"selection":
						[
							[
								1133,
								1133
							]
						],
						"settings":
						{
							"bs_sintax": "c++",
							"buffer_scroll_name": "d9a582a1",
							"spell_check": false,
							"syntax": "Packages/cppStartingKit/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Tupfile",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 54,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"bs_sintax": "plain text",
							"buffer_scroll_name": "f1c3b99a",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/server/server.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1583,
						"regions":
						{
						},
						"selection":
						[
							[
								1121,
								1121
							]
						],
						"settings":
						{
							"bs_sintax": "c++",
							"buffer_scroll_name": "b1fad33b",
							"spell_check": false,
							"syntax": "Packages/cppStartingKit/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ukrnet-test.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
